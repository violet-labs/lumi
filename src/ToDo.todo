Front-end:
    ✔ (15m) Criar botões de verdade em vez dos nav-link da Sidenav @done(24-05-27 23:00)

    Formulário de adicionar paciente:
        ✔ (5m) Verificar se a tabela está correta no banco @done(24-05-27 23:00)
        ✔ (5m) Verificar se precisa adicionar mais colunas @done(24-05-27 23:01)
        ✔ (5m) Fazer o migration, se necessário @done(24-05-27 23:08)
            ✔ (15m) Criar controller, model e rotas do paciente @done(24-05-27 23:27)
            Criar modal simples para adicionar o paciente:
                ✔ (5m) Criar HTML do Modal na página Pacientes @done(24-05-27 23:31)
                    Campos:
                        ✔ Nome @done(24-05-27 23:32)
                        ✔ Dentista (opcional) @done(24-05-27 23:32)
                        ✔ Celular (opcional) @done(24-05-27 23:32)
                ✔ (2m) Fazer o botão "Novo paciente" abrir o modal @done(24-05-27 23:34)
                ✔ (3m) Corrigir conflito do z-index entre modal e sidenav @done(24-05-27 23:37)
                Fazer função de salvar:
                    ✔ (10m) Fazer função no JavaScript @done(24-05-27 23:56)
                    ✔ (15m) Fazer função no Back-end @done(24-05-27 23:56)
    
    Fazer funcionar o formulário de bem-vindo:
        ✔ (10m) Remover top navigation @done(24-05-28 21:14)
        ✔ (5m) Criar model "detalhe_pessoal" @done(24-05-28 21:37)
        ✔ (8m) Criar tabela "detalhes_pessoais": @done(24-05-28 21:37)
            Colunas:
                ✔ id @done(24-05-28 21:37)
                ✔ id_paciente @done(24-05-28 21:37)
                ✔ tipo @done(24-05-28 21:37)
                ✔ categoria @done(24-05-28 21:37)
                ✔ descricao @done(24-05-28 21:37)

        Criar lista com os formulários de boas-vindas que forem preenchidos:
            ✔ (2m) Criar container da lista, com uns 3 slots @done(24-05-29 00:23)
            ✔ (2m) Criar o elemento da lista @done(24-05-29 01:13)
            ✔ (2m) Criar outras duas listas: @done(24-05-29 01:13)
                ✔ Últimos adicionados @done(24-05-29 01:13)
                ✔ Próximas consultas @done(24-05-29 01:13)
            ✔ (5m) Preencher linhas da lista: @done(24-05-29 01:13)
                ✔ Nome @done(24-05-29 01:13)
                ✔ Horário @done(24-05-29 01:13)
                ✔ Botão para criar paciente @done(24-05-29 01:13)
                
        ✔ (10m) CORRIGIR: lumi-app não está carregando @done(24-05-28 21:54)
        ✔ (15m) Melhorar layout da tela dos pacientes @done(24-05-29 00:15)
        ✔ (15m) Criar model, controller e rota para o formulário de boas-vindas: @done(24-05-29 00:20)
            ✔ id @done(24-05-29 00:20)
            ✔ horario @done(24-05-29 00:20)
            ✔ id_paciente -> nullable() @done(24-05-29 00:20)
            ✔ nome @done(24-05-29 00:20)
            ✔ email @done(24-05-29 00:20)
            ✔ whatsapp @done(24-05-29 00:20)
            ✔ dados @done(24-05-29 00:20)
        ✔ (15m) Observar as perguntas e pensar em uma estrutura para encaixá-las (pensar em uma forma que funcione com v-bind) @done(24-05-28 21:52)
        
        Fazer funcionar a tela dos pacientes:
            ✔ (2m) Adicionar "dev.lumiorthosystem:8080" nas regras de CORS @done(24-05-29 01:39)
            ✔ (2m) verificar a função getPacientes pelo Insomnia @done(24-05-29 01:24)
            ✔ (5m) fazer funcionar a função de listar os pacientes @done(24-05-29 01:32)
            ✔ (7m) criar chamada no axios para listar @done(24-05-29 01:39)
            ✔ (8m) adicionar mais campos nos pacientes: @done(24-05-29 01:44)
                ✔ diagnostico @done(24-05-29 01:44)
                ✔ tratamento @done(24-05-29 01:44)
                ✔ data_inicio_tratamento @done(24-05-29 01:44)
                ✔ data_final_prevista, @done(24-05-29 01:44)
                ✔ status_tratamento, @done(24-05-29 01:44)
                ✔ primeira_consulta @done(24-05-29 01:44)
                ✔ ultima_consulta @done(24-05-29 01:44)
                ✔ proxima_consulta @done(24-05-29 01:44)
            ☐ Fazer a tabela listar do banco de dados
            ✔ (10m) API: fazer função para puxar dados de um usuário @done(24-05-29 01:32)
            ☐ (10m) JavaScript: fazer função para puxar dados do usuário
            ☐ (5m) Traduzir o DataTables

        ☐ (10m) Fazer novo layout para rolar as perguntas  
        ☐ (30m) Executar a migração para a nova estrutura:
            ☐ Pergunta
            ☐ tipo (radio, multiple-choices, open-text),
            ☐ condition
            ☐ options (para radio e multiple-choices) - array de opções possíveis - options:
                ☐ personalDetail
                ☐ detailType (good, neutral, attention, bad)
                ☐ openText (texto aberto por uma opção do tipo open-text)
        ☐ (5m) Criar rota para receber o formulário de boas-vindas
        ☐ (7m) Fazer função JavaScript para enviar o formulário
        ☐ (7m) Fazer função na API para receber o formulário
        ☐ (10m) Fazer funcionar o INSERT do formulário
        ☐ (10m) Tela do formulário de boas-vindas: verificar se o status do formulário já é preenchido

        ☐ (30m) Escrever "consequencia" para cada resposta de cada pergunta, colocando cada pergunta dentro de uma categoria
        ☐ (15m) Fazer o back-end receber os valores do formulário e criar os "detalhes_pessoais"
        ☐ (20m) Exibir detalhes_pessoais na tela do paciente (Detalhes do paciente)

    ☐ Colocar histórico de consultas na dashboard Inicio
    ☐ Colocar histórico de ações na dashboard Inicio

    ☐ Backend: verificar os models e migrations dos pacientes (comparar com o da CECLOP e verificar se tá faltando algum campo)

-- ----------------------------------------------------------------- --

Outro dia:
    Front-end:
        Desenvolver:
            ☐ Formulário de adicionar dentista
            ☐ Tela para ver as informações do dentista
            Colocar a sidenav nas outras telas também:
                ☐ Finanças
        ☐ Excluir arquivos que não forem ser usados
    Backend:
        Verificar os models e migrations:
            ☐ Formulários
            ☐ Dentistas
            ☐ Consultas
            ☐ Agenda
        Verificar as tabelas do banco de dados (comparar com tabelas da CECLOP):
            ☐ Formulários
            ☐ Dentistas
            ☐ Consultas / agenda
        Tabela pacientes:
            ☐ picture_url
            ☐ status

-- -------------------------------------------------- --

IDEAS:
    ☐ Ao finalizar a consulta, exibir uma tela para inserir os dados da consulta (se mudou algum dispositivo do aparelho etc)

TEMP HELPERS: 
    ☐ O que mais te incomoda em seu sorriso? O que você gostaria de mudar?
    ☐ (Dentes encavalados, dentes pra frente etc)
    ☐ Categoria: percepções do paciente
    -------------------------------------------------
    ☐ O que isso interfere no seu dia-a-dia?
    ☐ (Vergonha, dificuldade na fala etc)
    ☐ Categoria: X
    ---------------------------------------------------
    ☐ Você tem, ou já teve, algum destes hábitos?
    ☐ (Chupeta, roer unhas etc)
    ☐ Categoria: hábitos do paciente (Possui hábito de roer unhas)
    -----------------------------------------------------------
    ☐ Quão bem você respira pelo nariz?
    ☐ ()